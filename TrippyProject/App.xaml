<Application x:Class="TrippyProject.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TrippyProject"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             StartupUri="/View/MainWindowView.xaml"
             xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
             xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:Icon ="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:internal="clr-namespace:MaterialDesignThemes.Wpf.Internal;assembly=MaterialDesignThemes.Wpf">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <materialDesign:BundledTheme BaseTheme="Light" PrimaryColor="Blue" SecondaryColor="Lime" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesign2.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="menuButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="#FFFFFF"/>
                <Setter Property="Tag" Value="Hidden"/>
                <Setter Property="Margin" Value="25 0 0 0 "/>
                <Setter Property="Height" Value="45"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="20">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Tag" Value="Visible"/>
                        <Setter Property="Background" Value="#f8f7fc"/>
                        <Setter Property="Foreground" Value="Black"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="Tag" Value="Hidden"/>
                        
                    </Trigger>
                    <DataTrigger Binding="{Binding ElementName=menuButton, Path=IsActive}" Value="True">
                        <Setter Property="Tag" Value="Visible" />
                        <Setter Property="Background" Value="#f8f7fc"/>
                        <Setter Property="Foreground" Value="#ffffff"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="menuButtonIcon" TargetType="Icon:PackIconMaterial">
                <Setter Property="Width" Value="16"/>
                <Setter Property="Height" Value="16"/>
                <Setter Property="Margin" Value="20 0"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="{Binding Path= Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
            </Style>

            <Style x:Key="menuButtonText" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{Binding Path= Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <Style x:Key="searchTextBox" TargetType="TextBox">
                <Setter Property="Background" Value="#ffffff"/>
                <Setter Property="Foreground" Value="#767676"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Padding" Value="150 15"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="0 10"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBoxBase">
                            <Border x:Name="border" 
                                    CornerRadius="22" 
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    SnapsToDevicePixels="true">
                                <ScrollViewer x:Name="PART_ContentHost"
                                              Focusable="False"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="#d9d9d9" TargetName="border"/>
                                </Trigger>

                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="BorderBrush" Value="#d9d9d9" TargetName="border"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                

            </Style>

            <Style x:Key="iconButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="#88878e"/>
                <Setter Property="Margin" Value="10 0 0 0"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="Width" Value="35"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="50">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Tag" Value="Visible"/>
                        <Setter Property="Background" Value="#e9e9e9"/>
                        <Setter Property="Foreground" Value="AliceBlue"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
